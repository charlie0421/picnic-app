name: ECS Deployment

on:
  push:
    branches:
      - develop

jobs:
  deploy_api_user:
    runs-on: self-hosted
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [arm64]
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ap-northeast-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_CLUSTER_NAME: prame-dev-cluster
      AWS_SERVICE_NAME: prame-dev-api-user-service
      FOLDER_NAME: user
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: arm64

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build for User
        run: |
          cd packages/api
          yarn set version 4.2.1
          yarn install
          yarn api-$FOLDER_NAME build

      - name: Push Docker image for User
        run: |
          cd packages/api
          docker build -f $FOLDER_NAME/Dockerfile -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_SERVICE_NAME:latest .
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_SERVICE_NAME:latest

      - name: Update ECS Service for Service User
        run: |
          aws ecs update-service --cluster $AWS_CLUSTER_NAME --service $AWS_SERVICE_NAME --force-new-deployment

  deploy_api_auth:
    runs-on: self-hosted
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [arm64]
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ap-northeast-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_CLUSTER_NAME: prame-dev-cluster
      AWS_SERVICE_NAME: prame-dev-api-auth-service
      FOLDER_NAME: auth
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: arm64

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build for Auth
        run: |
          cd packages/api
          yarn set version 4.2.1
          yarn install
          yarn api-$FOLDER_NAME build

      - name: Push Docker image for Auth
        run: |
          cd packages/api
          docker build -f $FOLDER_NAME/Dockerfile -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_SERVICE_NAME:latest .
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_SERVICE_NAME:latest

      - name: Update ECS Service for Auth
        run: |
          aws ecs update-service --cluster $AWS_CLUSTER_NAME --service $AWS_SERVICE_NAME --force-new-deployment
