workflows:
  picnic-app-android:
    name: Picnic App - Android
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      android_signing:
        - picnic_keystore
      groups:
        - google_play
        - shorebird-config
        - picnic_env
      flutter: 3.32.0
      java: 17
      vars:
        PATH: $PATH:$HOME/.shorebird/bin
        APP_NAME: "picnic_app"
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'production'
          include: true
          source: true
        - pattern: 'develop'
          include: true
          source: true
      tag_patterns:
        - pattern: 'picnic-v*'
          include: true
    scripts:
      - name: Set up debug keystore
        script: |
          set -e
          set -x
          keystore_path="/tmp/keystore.keystore"
          if [ -f "$keystore_path" ]; then
            echo "Keystore already exists"
          else
            keytool -genkey -v -keystore "$keystore_path" -alias androiddebugkey -storepass android -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi

      - name: Install Shorebird CLI
        script: |
          echo "=== Shorebird CLI 설치 시작 ==="
          curl --proto '=https' --tlsv1.2 https://raw.githubusercontent.com/shorebirdtech/install/main/install.sh -sSf | bash
          export PATH="$HOME/.shorebird/bin:$PATH"
          shorebird --version || echo "Shorebird 설치 실패"

      - name: Get Flutter packages
        script: |
          cd picnic_app
          flutter packages pub get

      - name: Build AAB and APK for Distribution
        script: |
          cd picnic_app
          flutter clean
          flutter pub get

          echo "=== 빌드 경로 미리 설정 ==="
          # Flutter가 예상하는 경로에 디렉토리 미리 생성
          mkdir -p build/app/outputs/bundle/release/
          mkdir -p build/app/outputs/apk/release/
          mkdir -p build/app/outputs/flutter-apk/

          echo "=== AAB 빌드 시작 ==="
          flutter build appbundle --release --dart-define=ENVIRONMENT=prod

          echo "=== APK 빌드 시작 ==="
          flutter build apk --release --dart-define=ENVIRONMENT=prod

          echo "=== 빌드 결과 확인 및 경로 동기화 ==="
          # 실제 생성된 파일을 Flutter가 찾는 경로로 복사
          if [ -f "android/app/build/outputs/bundle/release/app-release.aab" ]; then
            cp android/app/build/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/
            AAB_SIZE=$(du -h android/app/build/outputs/bundle/release/app-release.aab | cut -f1)
            echo "✅ AAB 파일을 올바른 경로로 복사됨 (크기: $AAB_SIZE)"
          else
            echo "⚠️ AAB 파일을 찾을 수 없습니다"
            find android/app/build/outputs/ -name "*.aab" 2>/dev/null | head -3
          fi

          if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
            cp android/app/build/outputs/apk/release/app-release.apk build/app/outputs/apk/release/
            cp android/app/build/outputs/apk/release/app-release.apk build/app/outputs/flutter-apk/
            APK_SIZE=$(du -h android/app/build/outputs/apk/release/app-release.apk | cut -f1)
            echo "✅ APK 파일을 올바른 경로로 복사됨 (크기: $APK_SIZE)"
          else
            echo "⚠️ APK 파일을 찾을 수 없습니다"
            find android/app/build/outputs/ -name "*.apk" 2>/dev/null | head -3
          fi

          echo "=== 최종 빌드 결과 확인 ==="
          find build/app/outputs/ -name "*.aab" -o -name "*.apk" | head -10
          find android/app/build/outputs/ -name "*.aab" -o -name "*.apk" | head -10

      - name: Shorebird Build
        script: |
          export PATH="$HOME/.shorebird/bin:$PATH"
          cd picnic_app

          echo "=== Shorebird 버전 확인 ==="
          shorebird --version

          echo "=== Shorebird 인증 확인 ==="
          if [ -z "$SHOREBIRD_TOKEN" ]; then
            echo "❌ SHOREBIRD_TOKEN 환경변수가 설정되지 않았습니다"
            exit 1
          else
            echo "✅ SHOREBIRD_TOKEN 환경변수가 설정되었습니다"
          fi

          echo "=== Shorebird 빌드 시작 ==="
          shorebird release android --flutter-version 3.32.0 --dart-define=ENVIRONMENT=prod --verbose

    artifacts:
      - picnic_app/build/**/outputs/**/*.aab
      - picnic_app/build/**/outputs/**/*.apk         # ✅ APK 포함
      - picnic_app/build/**/outputs/**/mapping.txt
      - picnic_app/flutter_drive.log

    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
      email:
        recipients:
          - ironlove77@gmail.com
        notify:
          success: true
          failure: true

  # =================== PICNIC APP iOS ===================
  picnic-app-ios:
    name: Picnic App - iOS
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.picnic.app
      groups:
        - app_store_connect
        - picnic_env
      flutter: 3.32.0
      vars:
        APP_NAME: "picnic_app"
        BUNDLE_ID: "com.picnic.app"
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'production'
          include: true
          source: true
        - pattern: 'develop'
          include: true
          source: true
      tag_patterns:
        - pattern: 'picnic-v*'
          include: true
    scripts:
      - name: Get Flutter packages
        script: |
          cd picnic_app
          flutter packages pub get

      - name: Install CocoaPods dependencies
        script: |
          cd picnic_app/ios
          pod install

      - name: Build iOS Archive
        script: |
          cd picnic_app
          flutter clean
          flutter pub get

          echo "=== iOS Archive 빌드 시작 ==="
          flutter build ipa --release --dart-define=ENVIRONMENT=prod

          echo "=== iOS 빌드 경로 설정 ==="
          # Flutter가 예상하는 경로에 디렉토리 생성
          mkdir -p build/ios/archive/Runner/
          mkdir -p build/ios/ipa/

          # 실제 생성된 IPA 파일을 Flutter가 찾는 경로로 복사
          if [ -f "build/ios/ipa/picnic_app.ipa" ]; then
            echo "✅ IPA 파일이 이미 올바른 경로에 있습니다"
          else
            # IPA 파일 찾기 및 복사
            IPA_FILE=$(find . -name "*.ipa" -type f | head -1)
            if [ -n "$IPA_FILE" ]; then
              cp "$IPA_FILE" build/ios/ipa/picnic_app.ipa
              echo "✅ IPA 파일을 올바른 경로로 복사됨: $IPA_FILE"
            fi
          fi

          echo "=== 빌드 결과 확인 ==="
          find build/ios/ -name "*.ipa" | head -10
          find . -name "*.ipa" 2>/dev/null | head -10

    artifacts:
      - picnic_app/build/ios/ipa/*.ipa
      - picnic_app/build/ios/archive/Runner.xcarchive
      - picnic_app/flutter_drive.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - App Store Connect Users
      email:
        recipients:
          - ironlove77@gmail.com
        notify:
          success: true
          failure: true

  # =================== TTJA APP Android ===================
  ttja-app-android:
    name: TTJA App - Android
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      android_signing:
        - ttja_keystore
      groups:
        - google_play
        - ttja_env
      flutter: 3.32.0
      java: 17
      vars:
        APP_NAME: "ttja_app"
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'production'
          include: true
          source: true
        - pattern: 'develop'
          include: true
          source: true
      tag_patterns:
        - pattern: 'ttja-v*'
          include: true
    scripts:
      - name: Set up debug keystore
        script: |
          set -e
          set -x
          keystore_path="/tmp/keystore.keystore"
          if [ -f "$keystore_path" ]; then
            echo "Keystore already exists"
          else
            keytool -genkey -v -keystore "$keystore_path" -alias androiddebugkey -storepass android -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi

      - name: Get Flutter packages
        script: |
          cd ttja_app
          flutter packages pub get

      - name: Build AAB and APK for Distribution
        script: |
          cd ttja_app
          flutter clean
          flutter pub get

          echo "=== AAB 빌드 시작 ==="
          flutter build appbundle --release --dart-define=ENVIRONMENT=prod

          echo "=== APK 빌드 시작 ==="
          flutter build apk --release --dart-define=ENVIRONMENT=prod

          echo "=== 빌드 경로 설정 ==="
          # Flutter가 예상하는 경로에 디렉토리 생성
          mkdir -p build/app/outputs/bundle/release/
          mkdir -p build/app/outputs/apk/release/
          mkdir -p build/app/outputs/flutter-apk/

          # 실제 생성된 파일을 Flutter가 찾는 경로로 복사
          if [ -f "android/app/build/outputs/bundle/release/app-release.aab" ]; then
            cp android/app/build/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/
            echo "✅ AAB 파일을 올바른 경로로 복사됨"
          fi

          if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
            cp android/app/build/outputs/apk/release/app-release.apk build/app/outputs/apk/release/
            cp android/app/build/outputs/apk/release/app-release.apk build/app/outputs/flutter-apk/
            echo "✅ APK 파일을 올바른 경로로 복사됨"
          fi

          echo "=== 빌드 결과 확인 ==="
          find build/app/outputs/ -name "*.aab" -o -name "*.apk" | head -10
          find android/app/build/outputs/ -name "*.aab" -o -name "*.apk" | head -10

    artifacts:
      - ttja_app/build/**/outputs/**/*.aab
      - ttja_app/build/**/outputs/**/*.apk
      - ttja_app/build/**/outputs/**/mapping.txt
      - ttja_app/flutter_drive.log

    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
      email:
        recipients:
          - ironlove77@gmail.com
        notify:
          success: true
          failure: true

  # =================== TTJA APP iOS ===================
  ttja-app-ios:
    name: TTJA App - iOS
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.ttja.app
      groups:
        - app_store_connect
        - ttja_env
      flutter: 3.32.0
      vars:
        APP_NAME: "ttja_app"
        BUNDLE_ID: "com.ttja.app"
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'production'
          include: true
          source: true
        - pattern: 'develop'
          include: true
          source: true
      tag_patterns:
        - pattern: 'ttja-v*'
          include: true
    scripts:
      - name: Get Flutter packages
        script: |
          cd ttja_app
          flutter packages pub get

      - name: Install CocoaPods dependencies
        script: |
          cd ttja_app/ios
          pod install

      - name: Build iOS Archive
        script: |
          cd ttja_app
          flutter clean
          flutter pub get

          echo "=== iOS Archive 빌드 시작 ==="
          flutter build ipa --release --dart-define=ENVIRONMENT=prod

          echo "=== iOS 빌드 경로 설정 ==="
          # Flutter가 예상하는 경로에 디렉토리 생성
          mkdir -p build/ios/archive/Runner/
          mkdir -p build/ios/ipa/

          # 실제 생성된 IPA 파일을 Flutter가 찾는 경로로 복사
          if [ -f "build/ios/ipa/ttja_app.ipa" ]; then
            echo "✅ IPA 파일이 이미 올바른 경로에 있습니다"
          else
            # IPA 파일 찾기 및 복사
            IPA_FILE=$(find . -name "*.ipa" -type f | head -1)
            if [ -n "$IPA_FILE" ]; then
              cp "$IPA_FILE" build/ios/ipa/ttja_app.ipa
              echo "✅ IPA 파일을 올바른 경로로 복사됨: $IPA_FILE"
            fi
          fi

          echo "=== 빌드 결과 확인 ==="
          find build/ios/ -name "*.ipa" | head -10
          find . -name "*.ipa" 2>/dev/null | head -10

    artifacts:
      - ttja_app/build/ios/ipa/*.ipa
      - ttja_app/build/ios/archive/Runner.xcarchive
      - ttja_app/flutter_drive.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - App Store Connect Users
      email:
        recipients:
          - ironlove77@gmail.com
        notify:
          success: true
          failure: true