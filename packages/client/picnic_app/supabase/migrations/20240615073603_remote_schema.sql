create table "public"."vote_reward" (
    "vote_id" integer not null,
    "reward_id" integer not null
);


alter table "public"."banner" drop column "subtitle_en";

alter table "public"."banner" drop column "subtitle_ko";

alter table "public"."banner" add column "title_ja" text;

alter table "public"."banner" add column "title_zh" text;

alter table "public"."reward" drop column "end_at";

alter table "public"."reward" drop column "start_at";

alter table "public"."reward" add column "title_ja" text;

alter table "public"."reward" add column "title_zh" text;

alter table "public"."reward" alter column "id" set generated by default;

alter table "public"."user_profiles" add column "nickname" text;

alter table "public"."vote" drop column "vote_title";

alter table "public"."vote" add column "title_en" text;

alter table "public"."vote" add column "title_ja" text;

alter table "public"."vote" add column "title_ko" text;

alter table "public"."vote" add column "title_zh" text;

CREATE UNIQUE INDEX reward_id_key ON public.reward USING btree (id);

CREATE UNIQUE INDEX reward_pkey ON public.reward USING btree (id);

CREATE UNIQUE INDEX vote_reward_pk ON public.vote_reward USING btree (vote_id, reward_id);

alter table "public"."reward" add constraint "reward_pkey" PRIMARY KEY using index "reward_pkey";

alter table "public"."vote_reward" add constraint "vote_reward_pk" PRIMARY KEY using index "vote_reward_pk";

alter table "public"."reward" add constraint "reward_id_key" UNIQUE using index "reward_id_key";

alter table "public"."vote_reward" add constraint "vote_reward_reward_id_fkey" FOREIGN KEY (reward_id) REFERENCES reward(id) not valid;

alter table "public"."vote_reward" validate constraint "vote_reward_reward_id_fkey";

alter table "public"."vote_reward" add constraint "vote_reward_vote_id_fkey" FOREIGN KEY (vote_id) REFERENCES vote(id) not valid;

alter table "public"."vote_reward" validate constraint "vote_reward_vote_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$begin
  insert into public.user_profiles (id, nickname, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;$function$
;

grant delete on table "public"."vote_reward" to "anon";

grant insert on table "public"."vote_reward" to "anon";

grant references on table "public"."vote_reward" to "anon";

grant select on table "public"."vote_reward" to "anon";

grant trigger on table "public"."vote_reward" to "anon";

grant truncate on table "public"."vote_reward" to "anon";

grant update on table "public"."vote_reward" to "anon";

grant delete on table "public"."vote_reward" to "authenticated";

grant insert on table "public"."vote_reward" to "authenticated";

grant references on table "public"."vote_reward" to "authenticated";

grant select on table "public"."vote_reward" to "authenticated";

grant trigger on table "public"."vote_reward" to "authenticated";

grant truncate on table "public"."vote_reward" to "authenticated";

grant update on table "public"."vote_reward" to "authenticated";

grant delete on table "public"."vote_reward" to "service_role";

grant insert on table "public"."vote_reward" to "service_role";

grant references on table "public"."vote_reward" to "service_role";

grant select on table "public"."vote_reward" to "service_role";

grant trigger on table "public"."vote_reward" to "service_role";

grant truncate on table "public"."vote_reward" to "service_role";

grant update on table "public"."vote_reward" to "service_role";


